[build]
  publish = "."
  functions = "netlify/functions"

[functions]
  node_bundler = "esbuild"
  external_node_modules = ["@netlify/blobs"]
3) Add the two Functions (these links create the folders automatically)
A. netlify/functions/log-scan.js
Open: https://github.com/pvr600/qr1tech-final/new/main?filename=netlify/functions/log-scan.js
Paste → Commit new file:

js
Copy
Edit
import { getStore } from "@netlify/blobs";

export default async (req) => {
  const url = new URL(req.url);
  const campaign = url.searchParams.get("campaign") || "Unlabeled";
  const desc = url.searchParams.get("desc") || "";

  let geo = {};
  try { geo = JSON.parse(req.headers.get("x-nf-geo") || "{}"); } catch {}

  const ua = (req.headers.get("user-agent") || "").toLowerCase();
  const device =
    /ipad|tablet/.test(ua) ? "Tablet" :
    /mobile|android|iphone/.test(ua) ? "Mobile" : "Desktop";

  const rec = {
    ts: new Date().toISOString(),
    city: geo.city || "Unknown",
    country: (geo.country && (geo.country.code || geo.country.name)) || "Unknown",
    lat: geo.latitude || null,
    lon: geo.longitude || null,
    device,
    campaign,
    desc
  };

  const store = getStore("qr1-scans");
  const day = rec.ts.slice(0,10);
  const rand = Math.random().toString(36).slice(2,8);
  const key = `events/${day}/${rec.ts}_${rand}.json`;

  await store.setJSON(key, rec);
  return new Response(JSON.stringify({ ok: true }), {
    headers: { "content-type": "application/json" }
  });
}
B. netlify/functions/stats.js
Open: https://github.com/pvr600/qr1tech-final/new/main?filename=netlify/functions/stats.js
Paste → Commit new file:

js
Copy
Edit
import { getStore } from "@netlify/blobs";

export default async () => {
  const store = getStore("qr1-scans");
  const listing = await store.list({ prefix: "events/" });
  const blobs = listing.blobs || [];

  const entries = [];
  for (const b of blobs) {
    try {
      const data = await store.get(b.key, { type: "json" });
      if (data && data.ts) entries.push(data);
    } catch {}
  }

  entries.sort((a, b) => (b.ts || "").localeCompare(a.ts || ""));

  const byDay = {}, byDevice = {}, byCity = {}, byCampaign = {};
  for (const e of entries) {
    const d = (e.ts || "").slice(0,10);
    if (d) byDay[d] = (byDay[d] || 0) + 1;
    byDevice[e.device || "Unknown"] = (byDevice[e.device || "Unknown"] || 0) + 1;
    byCity[e.city || "Unknown"] = (byCity[e.city || "Unknown"] || 0) + 1;
    byCampaign[e.campaign || "Unlabeled"] = (byCampaign[e.campaign || "Unlabeled"] || 0) + 1;
  }

  const recent = entries.slice(0, 20);
  return new Response(JSON.stringify({ byDay, byDevice, byCity, byCampaign, recent }), {
    headers: { "content-type": "application/json", "cache-control": "no-store" }
  });
}
When your repo shows these five items, tell me “done”:
index.html

netlify.toml

package.json

netlify/functions/log-scan.js

netlify/functions/stats.js

Then I’ll give you the final Netlify 3-clicks to go live.








Sources

Ask ChatGPT





